<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>