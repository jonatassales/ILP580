<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>